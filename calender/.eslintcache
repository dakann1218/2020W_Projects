[{"/workspace/2020W_Projects/calender/src/index.js":"1","/workspace/2020W_Projects/calender/src/App.js":"2","/workspace/2020W_Projects/calender/src/reportWebVitals.js":"3","/workspace/2020W_Projects/calender/src/store/reducers/my_reducers.js":"4","/workspace/2020W_Projects/calender/src/containers/MainPage.js":"5","/workspace/2020W_Projects/calender/src/containers/NewTodo.js":"6","/workspace/2020W_Projects/calender/src/containers/Todo.js":"7","/workspace/2020W_Projects/calender/src/store/actions/action_types.js":"8","/workspace/2020W_Projects/calender/src/components/DateBox.js":"9"},{"size":868,"mtime":1610021374614,"results":"10","hashOfConfig":"11"},{"size":684,"mtime":1610021563354,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610021374614,"results":"13","hashOfConfig":"11"},{"size":819,"mtime":1610021814081,"results":"14","hashOfConfig":"11"},{"size":5742,"mtime":1610022115757,"results":"15","hashOfConfig":"11"},{"size":2426,"mtime":1610021793409,"results":"16","hashOfConfig":"11"},{"size":2622,"mtime":1610021374614,"results":"17","hashOfConfig":"11"},{"size":114,"mtime":1610021374614,"results":"18","hashOfConfig":"11"},{"size":1096,"mtime":1610021374610,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yy19tv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/2020W_Projects/calender/src/index.js",[],["40","41"],"/workspace/2020W_Projects/calender/src/App.js",[],"/workspace/2020W_Projects/calender/src/reportWebVitals.js",[],"/workspace/2020W_Projects/calender/src/store/reducers/my_reducers.js",[],"/workspace/2020W_Projects/calender/src/containers/MainPage.js",["42"],"import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../store/actions/action_types';\n\n\nimport './MainPage.css';\n\nimport DateBox from '../components/DateBox';\n\n\n\n\nclass MainPage extends Component{\n\t\n\tstate = {\n\t\tstart_day: this.props.storedStates['start_day'], //Number(this.props.match.params.start),\n\t\tmonth:  this.props.storedStates['month'], //Number(this.props.match.params.month),\n\t\tyear:  this.props.storedStates['year'], //Number(this.props.match.params.year),\n\t\tdays_in_month:[31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n\t\ttodo_titles:{},\n\t\tneed_update: true,\n\t}\n\n\tcomponentDidMount(){\n\t\tif (this.state.need_update){\n\t\t\tthis.setState({need_update: false});\n\t\t\taxios.post('/api/sendTodos/',{ 'year': this.state.year, 'month': this.state.month })\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({todo_titles: res.data.titles})})\n\t\t\t\t.catch(err => alert('Main Page Error'));\n\t\t}\n\t}\n\t\n\t//Add todolist with first update\n\tcomponentDidUpdate(){\n\t\tif (this.state.need_update){\n\t\t\tthis.setState({need_update: false});\n\t\t\taxios.post('/api/sendTodos/',{ 'year': this.state.year, 'month': this.state.month })\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({todo_titles: res.data.titles})})\n\t\t\t\t.catch(err => alert('Main Page Error'));\n\t\t}\n\t}\n\n\t//Make a row of week\n\tweekmaker = (day,num) =>{\n\t\t/* day : mon(0),tue(1),wed(2) ... -> hallow box on front: 0,1,2 ...\n\t\t   start date\n\t\t   dict: get title */\n\t\tvar week = [];\n\t\tvar date = num;\n\t\tvar count = 0;\n\t\tconst todo_dict = this.state.todo_titles //{date: [[id,title],[id,title],.....], date:[....],....}\n\n\t\twhile(count < day){\n\t\t\tcount = count + 1;\n\t\t\tweek.push(\n\t\t\t\t<DateBox date={0}/>\n\t\t\t);\n\t\t}\n\t\twhile (count < 7){ \n\t\t\t//give num of dates in the month by prop to MainPage\n\t\t\tif(date in todo_dict){\n\t\t\t\tlet todo_list = []\n\t\t\t\t\n\t\t\t\tfor (var key in todo_dict){\n\t\t\t\t\tif (key == date){\n\t\t\t\t\t\tfor (var index in todo_dict[key]){\n\t\t\t\t\t\t\ttodo_list.push(todo_dict[key][index]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tweek.push(\n\t\t\t\t\t<DateBox todo = {todo_list} year = {this.state.year} month = {this.state.month} date = {date}/>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (date > this.state.days_in_month[this.state.month - 1]){\n\t\t\t\t\tweek.push(\n\t\t\t\t\t\t<DateBox date={0}/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tweek.push(\n\t\t\t\t\t\t<DateBox year = {this.state.year} month = {this.state.month} date = {date}/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = date + 1;\n\t\t\tcount = count +1;\n\t\t}\n\t\treturn(\n\t\t\t<div className = 'row'>\n\t\t\t{week}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\t//When left/right button is clicked\n\tonChangeMonthHandler = (direction) => {\n\t\t\n\t\tconst month = this.state.month;\n\t\tconst year = this.state.year;\n\t\t\n\t\tif (direction === 'left'){\n\t\t\tthis.setState({start_day: this.calculatePastStart()});\n\t\t\t\n\t\t\tif (month === 1){\n\t\t\t\tthis.setState({ month: 12, year: year - 1});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({ month: month-1});\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis.setState({start_day: this.calculateNextStart()});\n \t\t\tif (month === 12){\n\t\t\t\tthis.setState({ month: 1, year: year + 1});\n\t\t\t}\n\t\t\telse {\t\n\t\t\t\tthis.setState({ month: month + 1});\n\t\t\t}\n\t\t}\n\t\tthis.setState({need_update: true});\n\t}\n\n\t//Calcuate where the 1st day starts\t\n\tcalculatePastStart = () =>{\n\t\tvar tmp_start = this.state.start_day;\n\t\tvar tmp_days = this.state.days_in_month[(this.state.month+10)%12];\n\t\treturn (7 + tmp_start - tmp_days % 7)%7\n\t}\n\n\tcalculateNextStart = () =>{\n\t\tvar tmp_start = this.state.start_day;\n\t\tvar tmp_days = this.state.days_in_month[this.state.month-1];\n\t\treturn (tmp_start + (tmp_days % 7))% 7;\n\t}\n\n\t//Render\n\trender(){\n\t\tthis.props.onSaveState(this.state.year,this.state.month,this.state.start_day);\n\t\tconst tmp_days = this.state.days_in_month;\n\t\tif ((this.state.year)%4 === 0){\n\t\t\tif(this.state.days_in_month[1] === 28){\n\t\t\t\tthis.setState({days_in_month: [...tmp_days.slice(0,1), 29,...tmp_days.slice(2,12)]});\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(this.state.days_in_month[1] === 29){\n\t\t\t\tthis.setState({days_in_month: [...tmp_days.slice(0,1), 28,...tmp_days.slice(2,12)]});\n\t\t\t}\n\t\t}\n\n\t\tvar weekday = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'].map((day)=>{\n\t\t\treturn (<div className = 'day'>\n\t\t\t\t{day}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tweekday = (\n\t\t\t\t<div className = 'row'>\n\t\t\t\t{weekday}\n\t\t\t\t</div>\n\t\t);\n\t\t\n\t\tconst weeks = 1 + Math.ceil((this.state.days_in_month[this.state.month - 1] - 7 + this.state.start_day)/7);\t\n\t\tvar calender = [...Array(weeks).keys()].map((i)=> {\n\t\t\tif(i === 0){\n\t\t\t\treturn this.weekmaker(this.state.start_day,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn this.weekmaker(0,1 - this.state.start_day + i*7);\n\t\t\t}\n\t\t});\n\t\t\n\t\tcalender = (\n\t\t\t<div className = 'Calender'>\n\t\t\t{weekday}\n\t\t\t{calender}\n\t\t\t</div>\n\t\t);\n\n\t\treturn(\n\t\t\t<div className = 'MainPage'>\n\t\t\t\t<div className = 'Layout1'>\t\n\t\t\t\t\t<h1 className = 'Title'>My calender</h1>\t\n\t\t\t\t\t<div className = 'Layout1-1'>\t\n\t\t\t\t\t<button className = 'Arrow left' onClick = {() => this.onChangeMonthHandler('left')}>{'< Left'}</button>\n\t\t\t\t\t<div className = 'MYbox'>\n\t\t\t\t\t\t\t<div className = 'Year'>{this.state.year}</div>\n\t\t\t\t\t\t\t<div className = 'Month'>{this.state.month}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className = 'Arrow right' onClick = {() => this.onChangeMonthHandler('right')}>{'Right >'}</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className = 'Layout2'>\n\t\t\t\t\t\t{calender}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n};\n\nconst mapStateToProps = state =>{\n\treturn{\n\t\tstoredTodos: state.td.todos,\n\t\tstoredStates: state.td.states,\n\t}\n}\n\nconst mapDispatchToProps = dispatch =>{\n\treturn{\n\t\tonGetTodos: (year, month) => dispatch({type: actionTypes.GET_TODOS, year: year, month: month}),\n\t\tonSaveState: (year, month, start_day) => dispatch(\n\t\t\t{type: actionTypes.SAVE_STATE, year: year, month: month, start_day: start_day}\n\t\t),\n\t}\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MainPage);\n","/workspace/2020W_Projects/calender/src/containers/NewTodo.js",[],"/workspace/2020W_Projects/calender/src/containers/Todo.js",[],"/workspace/2020W_Projects/calender/src/store/actions/action_types.js",[],"/workspace/2020W_Projects/calender/src/components/DateBox.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":69,"column":14,"nodeType":"49","messageId":"50","endLine":69,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
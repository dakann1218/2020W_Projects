[{"/workspace/2020W_Projects_front/calender/src/index.js":"1","/workspace/2020W_Projects_front/calender/src/App.js":"2","/workspace/2020W_Projects_front/calender/src/reportWebVitals.js":"3","/workspace/2020W_Projects_front/calender/src/store/reducers/my_reducers.js":"4","/workspace/2020W_Projects_front/calender/src/containers/MainPage.js":"5","/workspace/2020W_Projects_front/calender/src/containers/NewTodo.js":"6","/workspace/2020W_Projects_front/calender/src/containers/Todo.js":"7","/workspace/2020W_Projects_front/calender/src/store/actions/action_types.js":"8","/workspace/2020W_Projects_front/calender/src/components/DateBox.js":"9"},{"size":868,"mtime":1609441154991,"results":"10","hashOfConfig":"11"},{"size":741,"mtime":1609441154987,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609441154991,"results":"13","hashOfConfig":"11"},{"size":846,"mtime":1609441154991,"results":"14","hashOfConfig":"11"},{"size":5742,"mtime":1609441154987,"results":"15","hashOfConfig":"11"},{"size":2436,"mtime":1609441154987,"results":"16","hashOfConfig":"11"},{"size":2622,"mtime":1609441154987,"results":"17","hashOfConfig":"11"},{"size":114,"mtime":1609441154991,"results":"18","hashOfConfig":"11"},{"size":1096,"mtime":1609441154987,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jhcjd0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/2020W_Projects_front/calender/src/index.js",[],["43","44"],"/workspace/2020W_Projects_front/calender/src/App.js",["45"],"import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { ConnectedRouter} from 'connected-react-router';\n\nimport MainPage from './containers/MainPage'\nimport NewTodo from './containers/NewTodo'\nimport Todo from './containers/Todo'\n\nfunction App(props) {\n  return (\n\t  <BrowserRouter>\n\t  <div className=\"App\">\n    \t\t<Switch>\n\t  \t<Route path = '/main' exact component = {MainPage} />\n\t  \t<Route path = '/newtodo/:year/:month/:date' exact component = {NewTodo} />\n\t  \t<Route path = '/todo/:id' exact component = {Todo} />\n\t  \t<Redirect exact from = '/' to = '/main' />\n\t  \t<Route render = {()=> <h1>Not Found</h1>} />\n\t  \t</Switch>\n\t  </div>\n\t  </BrowserRouter>\n  );\n}\n\nexport default App;\n","/workspace/2020W_Projects_front/calender/src/reportWebVitals.js",[],"/workspace/2020W_Projects_front/calender/src/store/reducers/my_reducers.js",["46"],"import * as action_types from '../actions/action_types';\nimport axios from 'axios';\n\nconst initialState = {\n\tstates: {'year':2020, 'month':12, 'start_day':1},\n\ttodos: {}\n};\n\nconst reducer = (state = initialState, action) =>{\n\t\n\tswitch(action.type){\n\t\t\n\t\tcase action_types.ADD_TODO:\n\t\t\tif (action.date in state.todos){//있으면 data concat\n\t\t\t\tstate.todos[action.date].push([action.title, action.content]);\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\telse{ //없으면 data insert\n\t\t\t\tstate.todos[action.date] = [[action.title, action.content]];\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\n\t\tcase action_types.GET_TODOS:\n\t\t\treturn;\n\t\t\n\t\tcase action_types.SAVE_STATE:\n\t\t\tstate.states['year'] = action.year;\n\t\t\tstate.states['month'] = action.month;\n\t\t\tstate.states['start_day'] = action.start_day;\n\t\t\treturn state; \n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default reducer;\n","/workspace/2020W_Projects_front/calender/src/containers/MainPage.js",["47"],"import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nimport * as actionTypes from '../store/actions/action_types';\n\n\nimport './MainPage.css';\n\nimport DateBox from '../components/DateBox';\n\n\n\n\nclass MainPage extends Component{\n\t\n\tstate = {\n\t\tstart_day: this.props.storedStates['start_day'], //Number(this.props.match.params.start),\n\t\tmonth:  this.props.storedStates['month'], //Number(this.props.match.params.month),\n\t\tyear:  this.props.storedStates['year'], //Number(this.props.match.params.year),\n\t\tdays_in_month:[31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n\t\ttodo_titles:{},\n\t\tneed_update: true,\n\t}\n\n\tcomponentDidMount(){\n\t\tif (this.state.need_update){\n\t\t\tthis.setState({need_update: false});\n\t\t\taxios.post('/api/sendTodos/',{ 'year': this.state.year, 'month': this.state.month })\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({todo_titles: res.data.titles})})\n\t\t\t\t.catch(err => alert('Main Page Error'));\n\t\t}\n\t}\n\t\n\t//Add todolist with first update\n\tcomponentDidUpdate(){\n\t\tif (this.state.need_update){\n\t\t\tthis.setState({need_update: false});\n\t\t\taxios.post('/api/sendTodos/',{ 'year': this.state.year, 'month': this.state.month })\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({todo_titles: res.data.titles})})\n\t\t\t\t.catch(err => alert('Main Page Error'));\n\t\t}\n\t}\n\n\t//Make a row of week\n\tweekmaker = (day,num) =>{\n\t\t/* day : mon(0),tue(1),wed(2) ... -> hallow box on front: 0,1,2 ...\n\t\t   start date\n\t\t   dict: get title */\n\t\tvar week = [];\n\t\tvar date = num;\n\t\tvar count = 0;\n\t\tconst todo_dict = this.state.todo_titles //{date: [[id,title],[id,title],.....], date:[....],....}\n\n\t\twhile(count < day){\n\t\t\tcount = count + 1;\n\t\t\tweek.push(\n\t\t\t\t<DateBox date={0}/>\n\t\t\t);\n\t\t}\n\t\twhile (count < 7){ \n\t\t\t//give num of dates in the month by prop to MainPage\n\t\t\tif(date in todo_dict){\n\t\t\t\tlet todo_list = []\n\t\t\t\t\n\t\t\t\tfor (var key in todo_dict){\n\t\t\t\t\tif (key == date){\n\t\t\t\t\t\tfor (var index in todo_dict[key]){\n\t\t\t\t\t\t\ttodo_list.push(todo_dict[key][index]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tweek.push(\n\t\t\t\t\t<DateBox todo = {todo_list} year = {this.state.year} month = {this.state.month} date = {date}/>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (date > this.state.days_in_month[this.state.month - 1]){\n\t\t\t\t\tweek.push(\n\t\t\t\t\t\t<DateBox date={0}/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tweek.push(\n\t\t\t\t\t\t<DateBox year = {this.state.year} month = {this.state.month} date = {date}/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = date + 1;\n\t\t\tcount = count +1;\n\t\t}\n\t\treturn(\n\t\t\t<div className = 'row'>\n\t\t\t{week}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\t//When left/right button is clicked\n\tonChangeMonthHandler = (direction) => {\n\t\t\n\t\tconst month = this.state.month;\n\t\tconst year = this.state.year;\n\t\t\n\t\tif (direction === 'left'){\n\t\t\tthis.setState({start_day: this.calculatePastStart()});\n\t\t\t\n\t\t\tif (month === 1){\n\t\t\t\tthis.setState({ month: 12, year: year - 1});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({ month: month-1});\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis.setState({start_day: this.calculateNextStart()});\n \t\t\tif (month === 12){\n\t\t\t\tthis.setState({ month: 1, year: year + 1});\n\t\t\t}\n\t\t\telse {\t\n\t\t\t\tthis.setState({ month: month + 1});\n\t\t\t}\n\t\t}\n\t\tthis.setState({need_update: true});\n\t}\n\n\t//Calcuate where the 1st day starts\t\n\tcalculatePastStart = () =>{\n\t\tvar tmp_start = this.state.start_day;\n\t\tvar tmp_days = this.state.days_in_month[(this.state.month+10)%12];\n\t\treturn (7 + tmp_start - tmp_days % 7)%7\n\t}\n\n\tcalculateNextStart = () =>{\n\t\tvar tmp_start = this.state.start_day;\n\t\tvar tmp_days = this.state.days_in_month[this.state.month-1];\n\t\treturn (tmp_start + (tmp_days % 7))% 7;\n\t}\n\n\t//Render\n\trender(){\n\t\tthis.props.onSaveState(this.state.year,this.state.month,this.state.start_day);\n\t\tconst tmp_days = this.state.days_in_month;\n\t\tif ((this.state.year)%4 === 0){\n\t\t\tif(this.state.days_in_month[1] === 28){\n\t\t\t\tthis.setState({days_in_month: [...tmp_days.slice(0,1), 29,...tmp_days.slice(2,12)]});\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(this.state.days_in_month[1] === 29){\n\t\t\t\tthis.setState({days_in_month: [...tmp_days.slice(0,1), 28,...tmp_days.slice(2,12)]});\n\t\t\t}\n\t\t}\n\n\t\tvar weekday = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'].map((day)=>{\n\t\t\treturn (<div className = 'day'>\n\t\t\t\t{day}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tweekday = (\n\t\t\t\t<div className = 'row'>\n\t\t\t\t{weekday}\n\t\t\t\t</div>\n\t\t);\n\t\t\n\t\tconst weeks = 1 + Math.ceil((this.state.days_in_month[this.state.month - 1] - 7 + this.state.start_day)/7);\t\n\t\tvar calender = [...Array(weeks).keys()].map((i)=> {\n\t\t\tif(i === 0){\n\t\t\t\treturn this.weekmaker(this.state.start_day,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn this.weekmaker(0,1 - this.state.start_day + i*7);\n\t\t\t}\n\t\t});\n\t\t\n\t\tcalender = (\n\t\t\t<div className = 'Calender'>\n\t\t\t{weekday}\n\t\t\t{calender}\n\t\t\t</div>\n\t\t);\n\n\t\treturn(\n\t\t\t<div className = 'MainPage'>\n\t\t\t\t<div className = 'Layout1'>\t\n\t\t\t\t\t<h1 className = 'Title'>My calender</h1>\t\n\t\t\t\t\t<div className = 'Layout1-1'>\t\n\t\t\t\t\t<button className = 'Arrow left' onClick = {() => this.onChangeMonthHandler('left')}>{'< Left'}</button>\n\t\t\t\t\t<div className = 'MYbox'>\n\t\t\t\t\t\t\t<div className = 'Year'>{this.state.year}</div>\n\t\t\t\t\t\t\t<div className = 'Month'>{this.state.month}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className = 'Arrow right' onClick = {() => this.onChangeMonthHandler('right')}>{'Right >'}</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className = 'Layout2'>\n\t\t\t\t\t\t{calender}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n};\n\nconst mapStateToProps = state =>{\n\treturn{\n\t\tstoredTodos: state.td.todos,\n\t\tstoredStates: state.td.states,\n\t}\n}\n\nconst mapDispatchToProps = dispatch =>{\n\treturn{\n\t\tonGetTodos: (year, month) => dispatch({type: actionTypes.GET_TODOS, year: year, month: month}),\n\t\tonSaveState: (year, month, start_day) => dispatch(\n\t\t\t{type: actionTypes.SAVE_STATE, year: year, month: month, start_day: start_day}\n\t\t),\n\t}\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MainPage);\n","/workspace/2020W_Projects_front/calender/src/containers/NewTodo.js",["48","49"],"import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport axios from 'axios';\n\nimport * as action_types from '../store/actions/action_types';\n\nimport './NewTodo.css';\n\nclass NewTodo extends Component{\n\tstate = {\n\t\ttitle:'',\n\t\tcontent:'',\n\t\tdate: this.props.match.params.date,\n\t\tredirect:false,\n\t}\n\t\n\t//Check if title is null or only spaces\n\tcheckTitle = () =>{\n\t\tconst title_split = this.state.title.split(' ');\n\t\t\n\t\tvar only_space = true;\n\t\tfor (var i in title_split){\n\t\t\tif(title_split[i] !=' '){\n\t\t\t\tonly_space  = false;\n\t\t\t}\n\t\t}\n\n\t\tif (title_split[0] === ''){ return false;}\n\t\telse if (only_space){ return false;}\n\t\telse {return true;}\n\t}\n\n\tonClickReturn = () =>{\n\t\tthis.setState({redirect: true}); \n\t}\n\n\t//When submit button is clicked\n\tonClickSubmit = () =>{\n\t\tif(this.checkTitle()){\n\t\t\tthis.props.StoreTodo(this.state.date ,this.state.title, this.state.content);\n\t\t\taxios.post('/api/saveTodo/',{ \t'year': this.props.match.params.year,\n\t\t\t\t\t\t\t'month': this.props.match.params.month,\n\t\t\t\t\t\t\t'date': this.state.date,\n\t\t\t\t\t\t\t'title': this.state.title,\n\t\t\t\t\t\t\t'content': this.state.content })\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({redirect:true});\n\t\t\t\t\talert('Submitted!');})\n\t\t\t\t.catch(err => alert('Error'));\n\t\t}\n\t\telse{\n\t\t\talert('Please enter title');\n\t\t}\n\t}\n\n\t//Render\n\trender(){\n\t\tif (this.state.redirect){\n\t\t\treturn\t<Redirect to='/main'/>\n\t\t}\n\t\t\n\t\treturn(\n\t\t\t<div className = 'NewTodo'>\n\t\t\t\t<h1>New Todo</h1>\n\t\t\t\t\n\t\t\t\t<label>Title</label>\n\t\t\t\t<input \n\t\t\t\tclassName = 'Title'\n\t\t\t\tplaceholder = {'New Todo\\'s Title!'}\n\t\t\t\tvalue = {this.state.title}\n\t\t\t\tonChange ={(event) => this.setState({title:event.target.value})}>\n\t\t\t\t</input>\n\t\t\t\t\n\t\t\t\t<label>Content</label>\n\t\t\t\t<textarea\n\t\t\t\tclassName = 'Content'\n\t\t\t\tplaceholder = 'Write you content here...'\n\t\t\t\tvalue = {this.state.content}\n\t\t\t\tonChange ={(event) => this.setState({content:event.target.value})}>\n\t\t\t\t</textarea>\n\t\t\t\t\n\t\t\t\t<div className = 'Buttons'>\n\t\t\t\t<button onClick={()=>this.onClickReturn()} className = 'Submit'>Return</button>\n\t\t\t\t<button onClick={()=>this.onClickSubmit()} className = 'Submit'>Submit</button>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch =>{\n\treturn{\n\t\tStoreTodo: (date, title, content) =>\n\t\tdispatch({ type: action_types.ADD_TODO, date: date,title: title, content: content})\n\t};\n};\n\nexport default connect(null,mapDispatchToProps)(NewTodo);\n","/workspace/2020W_Projects_front/calender/src/containers/Todo.js",[],"/workspace/2020W_Projects_front/calender/src/store/actions/action_types.js",[],"/workspace/2020W_Projects_front/calender/src/components/DateBox.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":69,"column":14,"nodeType":"61","messageId":"62","endLine":69,"endColumn":16},{"ruleId":"54","severity":1,"message":"63","line":3,"column":9,"nodeType":"56","messageId":"57","endLine":3,"endColumn":19},{"ruleId":"59","severity":1,"message":"64","line":24,"column":22,"nodeType":"61","messageId":"62","endLine":24,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ConnectedRouter' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]